# Copyright The Linux Foundation and each contributor to CommunityBridge.
# SPDX-License-Identifier: MIT
swagger: '2.0'
info:
  title: EasyCLA API
  version: '1.0.0'
basePath: /v4
schemes:
  - http

consumes:
  - application/json
produces:
  - application/json

#securityDefinitions:
#  OauthSecurity:
#    type: oauth2
#    flow: accessCode
#    authorizationUrl: 'https://accounts.google.com/o/oauth2/v2/auth'
#    tokenUrl: 'https://www.googleapis.com/oauth2/v4/token'
#    scopes:
#      admin: LF Admin scope
#      project: Project Manager scope
#      company: CLA Manager scope
#      contrib: Contributor scope

#security:
#  - OauthSecurity: []

tags:
  - name: service
  - name: easycla

paths:
  /ops/health:
    get:
      summary: API Health Check
      security: []
      description: The health and status of the EasyCLA API service
      operationId: getHealth
      produces:
        - application/json
      responses:
        '200':
          description: 'Success'
          headers:
            X-REQUEST-ID:
              type: string
              description: Request ID
          schema:
            $ref: '#/definitions/health'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
        '503':
          description: ''
          schema:
            $ref: '#/definitions/health'
      tags:
        - health

  /api-docs:
    get:
      security: []
      summary: Get swagger documentation
      description: Renders the API Documentation has an interactive HTML page.
      operationId: getDoc
      produces:
        - text/html
      responses:
        200:
          description: Success
      tags:
        - docs

  /swagger.json:
    get:
      security: []
      summary: Get swagger JSON
      description: Returns the swagger specification as a JSON document.
      operationId: getSwagger
      produces:
        - application/json
      responses:
        200:
          description: Success
      tags:
        - docs

  /orgs/{salesForceOrganizationId}:
    get:
      security: []
      summary: list foundations affiliated with the organization
      description: Returns list of foundations affiliated with the organization of organization manager
      operationId: getOrgFoundations
      parameters:
        - name: salesForceOrganizationId
          description: SalesForce ID of organization
          in: path
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/organization'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - organization

  /projects/{projectID}:
    get:
      security: []
      summary: Get project
      description: Returns details of the project
      operationId: getProject
      parameters:
        - name: projectID
          description: ID of the project
          in: path
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/project'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - project

  /events:
    get:
      security: []
      summary: search events
      description: Returns list of events matching with search criteria
      operationId: searchEvents
      parameters:
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/events_order_by'
        - $ref: '#/parameters/sort_order'
        - $ref: '#/parameters/event_type'
        - $ref: '#/parameters/user_id'
        - $ref: '#/parameters/company_id'
        - $ref: '#/parameters/project_id'
        - $ref: '#/parameters/before'
        - $ref: '#/parameters/after'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            $ref: '#/definitions/event_list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - events

  /cla_groups:
    get:
      security: []
      summary: get list of CLA groups
      description: return filtered list of CLA groups
      operationId: listCLAGroups
      parameters:
        - $ref: '#/parameters/foundation_id'
        - $ref: '#/parameters/project_manager_id'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/cla_groups_order_by'
        - $ref: '#/parameters/sort_order'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/cla_group_list'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - cla-groups
    post:
      security: []
      summary: create CLA group
      description: Creates CLA group
      operationId: createCLAGroup
      parameters:
        - in: body
          description: CLA group to create
          name: cla_group
          schema:
            $ref: '#/definitions/create_cla_group'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/cla_group'
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
      tags:
        - cla-groups

  /cla_groups/{cla_group_id}:
    put:
      security: []
      summary: update CLA group
      description: update CLA group
      operationId: updateCLAGroup
      parameters:
        - in: path
          description: ID of the CLA group to update
          name: cla_group_id
          type: string
          required: true
        - in: body
          description: CLA group to update
          name: cla_group
          schema:
            $ref: '#/definitions/update_cla_group'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - cla-groups
    delete:
      security: []
      summary: delete the CLA group
      description: delete the CLA group
      operationId: deleteCLAGroup
      parameters:
        - in: path
          description: ID of the CLA group to delete
          name: cla_group_id
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '400':
          $ref: '#/responses/invalid-request'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/not-found'
      tags:
        - cla-groups

definitions:
  health:
    type: object
    title: Health
    properties:
      TimeStamp:
        description: The overall timestamp of the health check
        example: "2019-10-15T16:06:15Z"
        type: string
        x-omitempty: false
      Status:
        description: The overall status of the health check
        example: "healthy"
        type: string
        x-omitempty: false
      Version:
        description: The version tag of the service related to this health check
        example: "v0.1.35"
        type: string
        x-omitempty: false
      Githash:
        description: The git hash of the service related to this health check
        example: "e96f055"
        type: string
        x-omitempty: false
      Branch:
        description: The git branch of the service related to this health check
        example: "master"
        type: string
        x-omitempty: false
      BuildTimeStamp:
        description: The build timestamp of the service related to this health check
        example: "2019-10-15T09:05:34-0700"
        type: string
        x-omitempty: false
      Healths:
        description: An array of components or sub-components for this health check
        type: array
        items:
          $ref: '#/definitions/health-status'

  health-status:
    type: object
    title: Health Status
    properties:
      Name:
        description: The name of the component or sub-component related to this health check.
        example: "CLA - DynamoDB"
        type: string
        x-omitempty: false
      Duration:
        description: The time it took to gather the health status
        example: "8.481802ms"
        type: string
        x-omitempty: false
      Healthy:
        description: A flag indicating if this health status is health or not
        example: true
        type: boolean
        x-omitempty: false
      Error:
        description: An optional error message indicating the reason for the failed health check.
        example: "unable to connect to database - permission denied"
        type: string
      TimeStamp:
        example: "2019-10-15T16:07:43Z"
        description: The timestamp of the health check
        type: string
        x-omitempty: false

  error-response:
    type: object
    title: Error Response
    description: Standard error format
    properties:
      Code:
        type: string
        description: The code for the error response
        example: "403"
        pattern: '^([1-9][\d]+){1,}$'
      Message:
        type: string
        description: The message for the error response
        example: "Not authorized"
        pattern: '^([\w\d\s\-\,\./]+){2,}$'

  organization:
    type: object
    additionalProperties:
      type: array
      items:
        $ref: '#/definitions/foundation'

  foundation:
    type: object
    properties:
      foundationId:
        type: string
      claGroups:
        type: array
        items:
          type: object
          additionalProperties:
            type: object
            $ref: '#/definitions/clagroup'

  clagroup:
    type: object
    title: cla group
    description: cla group details
    properties:
      claGroupId:
        type: string
      organizationSigned:
        type: boolean
      waitingForSignature:
        type: boolean
      employeesSigned:
        type: integer
      employeesPending:
        type: integer
      projectsCovered:
        type: array
        items:
          type: string

  project:
    type: object
    properties:
      project_id:
        type: string
      project_name:
        type: string
      templates:
        type: array
        items:
          $ref: '#/definitions/cla_template'
      ccla_enabled:
        type: boolean
      icla_enabled:
        type: boolean
      icla_signature_required:
        type: boolean
      ccla_companies_signed:
        type: array
        items:
          type: string
      whitelist:
        $ref: '#/definitions/whitelist'

  cla_template:
    type: object
    properties:
      type:
        type: string
      legal_entity_name:
        type: string
      author:
        type: string
      url:
        type: string
      version:
        type: string
      created:
        type: string
      updated:
        type: string

  whitelist:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/whitelisted_user'
      domains:
        type: array
        items:
          type: object
          $ref: '#/definitions/whitelisted_domain'
      emails:
        type: array
        items:
          type: object
          $ref: '#/definitions/whitelisted_email'
      github_users:
        type: array
        items:
          type: object
          $ref: '#/definitions/whitelisted_github_user'
      github_orgs:
        type: array
        items:
          type: object
          $ref: '#/definitions/whitelisted_github_orgs'

  whitelisted_user:
    type: object
    properties:
      user_id:
        type: string
      signed:
        type: boolean
      signed_on:
        type: string
      last_activity:
        type: string

  whitelisted_domain:
    type: object
    properties:
      domain:
        type: string

  whitelisted_email:
    type: object
    properties:
      email:
        type: string

  whitelisted_github_user:
    type: object
    properties:
      github_user:
        type: string

  whitelisted_github_orgs:
    type: object
    properties:
      github_org:
        type: string

  event_list:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/event'

  event:
    type: object
    properties:
      id:
        type: string
        description: unique id of the event
      event_type:
        type: string
        description: type of the event
      user_id:
        type: string
        description: id of the user who created this event
      project_id:
        type: string
        description: id of the SFID project
      company_id:
        type: string
        description: id od the organization/company
      event_time:
        type: integer
        description: time of the event in epoch format.
      event_data:
        type: string
        description: data related to the event

  create_cla_group:
    type: object
    required:  # List the required properties here
    - foundation_id
    - cla_group_name
    - ccla_enabled
    - icla_enabled
    properties:
      foundation_id:
        type: string
        description: unique id of the foundation in SalesForce
      cla_group_name:
        type: string
        description: name of the CLA group
        example: CNCF
      ccla_enabled:
        type: boolean
        description: is CCLA enabled
      icla_enabled:
        type: boolean
        description: is ICLA enabled
      project_managers:
        type: array
        items:
          type: string
          format: uuid

  update_cla_group:
    type: object
    properties:
      cla_group_name:
        type: string
        description: name of the CLA group
        example: CNCF
      ccla_enabled:
        type: boolean
        description: is CCLA enabled
      icla_enabled:
        type: boolean
        description: is ICLA enabled

  cla_group_list:
    type: object
    properties:
      cla_groups:
        type: array
        items:
          $ref: '#/definitions/cla_group'

  cla_group:
    type: object
    properties:
      id:
        type: string
        description: unique id of the CLA group
      foundation_id:
        type: string
        description: unique id of the foundation in SalesForce
      cla_group_name:
        type: string
        description: name of the CLA group
        example: CNCF
      ccla_enabled:
        type: boolean
        description: is CCLA enabled
      icla_enabled:
        type: boolean
        description: is ICLA enabled
      created_at:
        type: integer
        description: time at which cla_group is created
      updated_at:
        type: integer
        description: time at which cla_group was updated
      project_managers:
        type: array
        items:
          type: string
          format: uuid

responses:
  unauthorized:
    description: Unauthorized
    schema:
      $ref: '#/definitions/error-response'
  invalid-request:
    description: Invalid request
    schema:
      $ref: '#/definitions/error-response'
  forbidden:
    description: Insufficient privilege to execute action.
    schema:
      $ref: '#/definitions/error-response'
  not-found:
    description: Not found
    schema:
      $ref: '#/definitions/error-response'
  #conflict:
  #  description: The request could not be completed due to a conflict with the current state of the target resource.
  #  schema:
  #    $ref: '#/definitions/error-response'

parameters:
  page_size:
    name: page_size
    description: The maximum number of results per page, value must be a positive integer value
    in: query
    type: integer
    default: 100
  offset:
    name: offset
    description: The page offset for fetching subsequent pages of results, value must be a non-negative integer value
    in: query
    type: integer
    default: 0
  events_order_by:
    name: order_by
    description: The field to order by, default sort order is ascending
    in: query
    type: string
    enum: [event_time,project_id,company_id,user_id,event_type]
  sort_order:
    name: sort_order
    in: query
    description: Sort order
    type: string
    enum: [asc, desc]
  event_type:
    name: event_type
    description: Type of the event
    in: query
    type: string
  user_id:
    name: user_id
    description: unique id of the user
    in: query
    type: string
  project_id:
    name: project_id
    description: unique id of the project
    in: query
    type: string
  company_id:
    name: company_id
    description: unique id of the company
    in: query
    type: string
  before:
    name: before
    description: return result created before this time. Time must be in epoch format in seconds.
    in: query
    type: integer
  after:
    name: after
    description: return result created after this time. Time must be in epoch format in seconds.
    in: query
    type: integer
  foundation_id:
    name: foundation_id
    description: unique id of the foundation
    in: query
    type: string
  project_manager_id:
    name: project_manager_id
    description: unique id of the project_manager
    in: query
    type: string
  cla_groups_order_by:
    name: order_by
    description: The field to order by, default sort order is ascending
    in: query
    type: string
    enum: [created_at,updated_at,cla_group_name,foundation_id]