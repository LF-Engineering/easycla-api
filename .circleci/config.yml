version: 2.1

jobs:
  build:
    docker:
      - image: circleci/golang:1.13-node
        environment:
          DATABASE_URL: postgres://test:test@127.0.0.1:5432/cla-test?sslmode=disable
          TEST_DATABASE_DSN: dbname=cla-test password=test user=test port=5432 sslmode=disable
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: test
          POSTGRES_DB: cla-test
          POSTGRES_PASSWORD: test

    working_directory: /go/src/github.com/communitybridge/easycla-api
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "be:d9:66:d5:e0:09:20:58:06:b5:c5:24:21:3b:64:3d"
            - "81:5b:7f:2f:6a:bb:49:f4:a1:8f:13:8d:26:5a:68:57"
      - run:
          name: Manually Setup SSH Key
          command: |
            echo "Setting up SSH keys for branch '${CIRCLE_BRANCH}' build."
            mkdir -p $HOME/.ssh
            echo ${GIT_SSH_PRIVATE_KEY} > $HOME/.ssh/lf-circleci-github-ssh-key
            echo "SSH private key installed"
            echo "Key is:"
            # TODO REMOVE
            cat $HOME/.ssh/lf-circleci-github-ssh-key
            echo "Host github.com" > $HOME/.ssh/config
            echo "  IdentityFile $HOME/.ssh/lf-circleci-github-ssh-key" >> $HOME/.ssh/config
            echo "SSH config is:"
            cat $HOME/.ssh/config
      - restore_cache:
          name: Restore Cache
          keys:
            - dep-packages-{{ checksum "Gopkg.lock" }}
      - run:
          name: Install and setup
          command: make setup
      - run:
          name: Download dependencies for lfx-kit swagger models
          command: make deps
      - run:
          name: Swagger Code Generation
          command: make swagger
      - run:
          name: Swagger Code Spec Validation
          command: make swagger-validate
      - run:
          name: Download dependencies
          command: make deps
      - run:
          name: Build
          command: make build
      - run:
          name: Lint
          command: make lint
      - run:
          name: Prepare test database
          command: dbmate -d ".build/db/migrations" -s ".build/db/schema.sql" up
      - run:
          name: Test
          command: make test
      - save_cache:
          name: Save Dep Cache
          key: dep-packages-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
            - node_modules
      - persist_to_workspace:
          root: ./
          paths:
            - vendor
            - node_modules

workflows:
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
